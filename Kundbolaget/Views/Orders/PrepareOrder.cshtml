@model Kundbolaget.Models.EntityModels.OrderVM

@{
    ViewBag.Title = "Kundbolaget-Kontrollera order";
}

<h2>Order i sin helhet</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Vill man ändra produkt och antal, v.g. klicka på "ändra"</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.OrderDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OrderDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OrderDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CustomerId, "CustomerId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CustomerId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CustomerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlannedDeliveryDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlannedDeliveryDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlannedDeliveryDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddressId, "AddressId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AddressId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AddressId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.Price > 0)
        {
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Skapa plockorder" class="btn btn-primary" />
                </div>
            </div>
        }

        <div class="form-horizontal">
            <table class="table">
                <tr>

                    <th>
                        @Html.LabelFor(model => Model.OrderProducts.First().ProductId, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.LabelFor(model => Model.OrderProducts.First().OrderedAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.LabelFor(model => Model.OrderProducts.First().AvailabeAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.LabelFor(model => Model.OrderProducts.First().Comment, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.LabelFor(model => Model.OrderProducts.First().UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th>
                        @Html.LabelFor(model => Model.OrderProducts.First().Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    </th>
                    <th></th>
                </tr>
                @foreach (var item in Model.OrderProducts)
                {
                    <tr>
                        <td>
                            @Html.EditorFor(model => item.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.ProductId, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => item.OrderedAmount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.OrderedAmount, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => item.AvailabeAmount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.AvailabeAmount, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => item.Comment, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Comment, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => item.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Price, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.EditorFor(model => item.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => item.Price, "", new { @class = "text-danger" })
                        </td>
                        <td>
                            @Html.ActionLink("Ändra", "Edit", "OrderProducts", new { id = item.Id }, null)
                        </td>

                    </tr>
                }
            </table>

        </div>

    </div>
}

<div>
    @Html.ActionLink("Tillbaka till listan", "Index")
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
